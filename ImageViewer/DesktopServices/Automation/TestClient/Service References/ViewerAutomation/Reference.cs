//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetActiveViewersResult", Namespace="http://www.clearcanvas.ca/imageViewer/automation")]
    [System.SerializableAttribute()]
    public partial class GetActiveViewersResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.Viewer[] ActiveViewersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.Viewer[] ActiveViewers {
            get {
                return this.ActiveViewersField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveViewersField, value) != true)) {
                    this.ActiveViewersField = value;
                    this.RaisePropertyChanged("ActiveViewers");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Viewer", Namespace="http://www.clearcanvas.ca/imageViewer/automation")]
    [System.SerializableAttribute()]
    public partial class Viewer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Guid IdentifierField;
        
        private string PrimaryStudyInstanceUidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.Guid Identifier {
            get {
                return this.IdentifierField;
            }
            set {
                if ((this.IdentifierField.Equals(value) != true)) {
                    this.IdentifierField = value;
                    this.RaisePropertyChanged("Identifier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string PrimaryStudyInstanceUid {
            get {
                return this.PrimaryStudyInstanceUidField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryStudyInstanceUidField, value) != true)) {
                    this.PrimaryStudyInstanceUidField = value;
                    this.RaisePropertyChanged("PrimaryStudyInstanceUid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetViewerInfoRequest", Namespace="http://www.clearcanvas.ca/imageViewer/automation")]
    [System.SerializableAttribute()]
    public partial class GetViewerInfoRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.Viewer ViewerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.Viewer Viewer {
            get {
                return this.ViewerField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewerField, value) != true)) {
                    this.ViewerField = value;
                    this.RaisePropertyChanged("Viewer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetViewerInfoResult", Namespace="http://www.clearcanvas.ca/imageViewer/automation")]
    [System.SerializableAttribute()]
    public partial class GetViewerInfoResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string[] AdditionalStudyInstanceUidsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string[] AdditionalStudyInstanceUids {
            get {
                return this.AdditionalStudyInstanceUidsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalStudyInstanceUidsField, value) != true)) {
                    this.AdditionalStudyInstanceUidsField = value;
                    this.RaisePropertyChanged("AdditionalStudyInstanceUids");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OpenStudiesRequest", Namespace="http://www.clearcanvas.ca/imageViewer/automation")]
    [System.SerializableAttribute()]
    public partial class OpenStudiesRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> ActivateIfAlreadyOpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReportFaultToUserField;
        
        private ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.OpenStudyInfo[] StudiesToOpenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> ActivateIfAlreadyOpen {
            get {
                return this.ActivateIfAlreadyOpenField;
            }
            set {
                if ((this.ActivateIfAlreadyOpenField.Equals(value) != true)) {
                    this.ActivateIfAlreadyOpenField = value;
                    this.RaisePropertyChanged("ActivateIfAlreadyOpen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReportFaultToUser {
            get {
                return this.ReportFaultToUserField;
            }
            set {
                if ((this.ReportFaultToUserField.Equals(value) != true)) {
                    this.ReportFaultToUserField = value;
                    this.RaisePropertyChanged("ReportFaultToUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.OpenStudyInfo[] StudiesToOpen {
            get {
                return this.StudiesToOpenField;
            }
            set {
                if ((object.ReferenceEquals(this.StudiesToOpenField, value) != true)) {
                    this.StudiesToOpenField = value;
                    this.RaisePropertyChanged("StudiesToOpen");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OpenStudyInfo", Namespace="http://www.clearcanvas.ca/imageViewer/automation")]
    [System.SerializableAttribute()]
    public partial class OpenStudyInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceAETitleField;
        
        private string StudyInstanceUidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SourceAETitle {
            get {
                return this.SourceAETitleField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceAETitleField, value) != true)) {
                    this.SourceAETitleField = value;
                    this.RaisePropertyChanged("SourceAETitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string StudyInstanceUid {
            get {
                return this.StudyInstanceUidField;
            }
            set {
                if ((object.ReferenceEquals(this.StudyInstanceUidField, value) != true)) {
                    this.StudyInstanceUidField = value;
                    this.RaisePropertyChanged("StudyInstanceUid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OpenStudiesResult", Namespace="http://www.clearcanvas.ca/imageViewer/automation")]
    [System.SerializableAttribute()]
    public partial class OpenStudiesResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.Viewer ViewerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.Viewer Viewer {
            get {
                return this.ViewerField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewerField, value) != true)) {
                    this.ViewerField = value;
                    this.RaisePropertyChanged("Viewer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivateViewerRequest", Namespace="http://www.clearcanvas.ca/imageViewer/automation")]
    [System.SerializableAttribute()]
    public partial class ActivateViewerRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.Viewer ViewerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.Viewer Viewer {
            get {
                return this.ViewerField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewerField, value) != true)) {
                    this.ViewerField = value;
                    this.RaisePropertyChanged("Viewer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CloseViewerRequest", Namespace="http://www.clearcanvas.ca/imageViewer/automation")]
    [System.SerializableAttribute()]
    public partial class CloseViewerRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.Viewer ViewerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.Viewer Viewer {
            get {
                return this.ViewerField;
            }
            set {
                if ((object.ReferenceEquals(this.ViewerField, value) != true)) {
                    this.ViewerField = value;
                    this.RaisePropertyChanged("Viewer");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NoActiveViewersFault", Namespace="http://www.clearcanvas.ca/imageViewer/automation")]
    [System.SerializableAttribute()]
    public partial class NoActiveViewersFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewerNotFoundFault", Namespace="http://www.clearcanvas.ca/imageViewer/automation")]
    [System.SerializableAttribute()]
    public partial class ViewerNotFoundFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureDescription {
            get {
                return this.FailureDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureDescriptionField, value) != true)) {
                    this.FailureDescriptionField = value;
                    this.RaisePropertyChanged("FailureDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudyNearlineFault", Namespace="http://schemas.datacontract.org/2004/07/ClearCanvas.Dicom.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class StudyNearlineFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudyInUseFault", Namespace="http://schemas.datacontract.org/2004/07/ClearCanvas.Dicom.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class StudyInUseFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudyOfflineFault", Namespace="http://schemas.datacontract.org/2004/07/ClearCanvas.Dicom.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class StudyOfflineFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OpenStudiesFault", Namespace="http://www.clearcanvas.ca/imageViewer/automation")]
    [System.SerializableAttribute()]
    public partial class OpenStudiesFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FailureDescriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FailureDescription {
            get {
                return this.FailureDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.FailureDescriptionField, value) != true)) {
                    this.FailureDescriptionField = value;
                    this.RaisePropertyChanged("FailureDescription");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudyNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/ClearCanvas.Dicom.ServiceModel")]
    [System.SerializableAttribute()]
    public partial class StudyNotFoundFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.clearcanvas.ca/imageViewer/automation", ConfigurationName="ViewerAutomation.IViewerAutomation")]
    public interface IViewerAutomation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/GetActiveViewe" +
            "rs", ReplyAction="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/GetActiveViewe" +
            "rsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.NoActiveViewersFault), Action="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/GetActiveViewe" +
            "rsNoActiveViewersFaultFault", Name="NoActiveViewersFault")]
        ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.GetActiveViewersResult GetActiveViewers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/GetViewerInfo", ReplyAction="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/GetViewerInfoR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.ViewerNotFoundFault), Action="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/GetViewerInfoV" +
            "iewerNotFoundFaultFault", Name="ViewerNotFoundFault")]
        ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.GetViewerInfoResult GetViewerInfo(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.GetViewerInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/OpenStudies", ReplyAction="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/OpenStudiesRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.StudyNearlineFault), Action="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/OpenStudiesStu" +
            "dyNearlineFaultFault", Name="StudyNearlineFault", Namespace="http://schemas.datacontract.org/2004/07/ClearCanvas.Dicom.ServiceModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.StudyInUseFault), Action="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/OpenStudiesStu" +
            "dyInUseFaultFault", Name="StudyInUseFault", Namespace="http://schemas.datacontract.org/2004/07/ClearCanvas.Dicom.ServiceModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.StudyOfflineFault), Action="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/OpenStudiesStu" +
            "dyOfflineFaultFault", Name="StudyOfflineFault", Namespace="http://schemas.datacontract.org/2004/07/ClearCanvas.Dicom.ServiceModel")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.OpenStudiesFault), Action="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/OpenStudiesOpe" +
            "nStudiesFaultFault", Name="OpenStudiesFault")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.StudyNotFoundFault), Action="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/OpenStudiesStu" +
            "dyNotFoundFaultFault", Name="StudyNotFoundFault", Namespace="http://schemas.datacontract.org/2004/07/ClearCanvas.Dicom.ServiceModel")]
        ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.OpenStudiesResult OpenStudies(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.OpenStudiesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/ActivateViewer" +
            "", ReplyAction="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/ActivateViewer" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.ViewerNotFoundFault), Action="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/ActivateViewer" +
            "ViewerNotFoundFaultFault", Name="ViewerNotFoundFault")]
        void ActivateViewer(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.ActivateViewerRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/CloseViewer", ReplyAction="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/CloseViewerRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.ViewerNotFoundFault), Action="http://www.clearcanvas.ca/imageViewer/automation/IViewerAutomation/CloseViewerVie" +
            "werNotFoundFaultFault", Name="ViewerNotFoundFault")]
        void CloseViewer(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.CloseViewerRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IViewerAutomationChannel : ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.IViewerAutomation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ViewerAutomationClient : System.ServiceModel.ClientBase<ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.IViewerAutomation>, ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.IViewerAutomation {
        
        public ViewerAutomationClient() {
        }
        
        public ViewerAutomationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ViewerAutomationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ViewerAutomationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ViewerAutomationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.GetActiveViewersResult GetActiveViewers() {
            return base.Channel.GetActiveViewers();
        }
        
        public ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.GetViewerInfoResult GetViewerInfo(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.GetViewerInfoRequest request) {
            return base.Channel.GetViewerInfo(request);
        }
        
        public ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.OpenStudiesResult OpenStudies(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.OpenStudiesRequest request) {
            return base.Channel.OpenStudies(request);
        }
        
        public void ActivateViewer(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.ActivateViewerRequest request) {
            base.Channel.ActivateViewer(request);
        }
        
        public void CloseViewer(ClearCanvas.ImageViewer.DesktopServices.Automation.TestClient.ViewerAutomation.CloseViewerRequest request) {
            base.Channel.CloseViewer(request);
        }
    }
}
